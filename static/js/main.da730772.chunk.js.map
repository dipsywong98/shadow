{"version":3,"sources":["Point.ts","Ray.ts","shadowApp.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Point","x","y","_x","_y","this","other","Math","pow","sqrt","n2Distance2","d","n2Distance","scalar","point","theta","st","sin","ct","cos","value","pt","Ray","src","dir","minus","atan2","after","rotate","ray","t","add","mul","segment","r_px","r_py","r_dy","r_dx","s_px","s_py","s_dy","s_dx","T2","T1","Infinity","a","b","window","PIXI","body","document","getElementById","firstChild","lastChild","removeChild","app","antialias","backgroundColor","blackGraphics","beginFill","drawRect","endFill","stage","addChild","appendChild","view","interactive","container","width","height","segments","corners","makeSquare","w","h","graphics","lineStyle","moveTo","lineTo","closePath","p0","p1","p2","p3","push","polygonGraphics","cursorGraphics","ptGraphics","bgFront","from","thing","screen","mask","i","random","ticker","renderer","plugins","interaction","mouse","global","sources","clear","forEach","source","intersections","k","another","length","drawPolygon","renderCast","rays","target","sort","map","min","l","intersect","at","drawCircle","filter","cast","shadowApp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.da730772.chunk.js","sourcesContent":["export class Point {\n  private _x: number\n  private _y: number\n\n  constructor (x: number, y: number) {\n    this._x = x\n    this._y = y\n  }\n\n  public n2Distance2 (other: Point): number {\n    return Math.pow(other.x - this.x, 2) + Math.pow(other.y - this.y, 2)\n  }\n\n  public n2Distance (other: Point): number {\n    return Math.sqrt(this.n2Distance2(other))\n  }\n\n  public normalize (): Point {\n    const d = this.n2Distance(new Point(0, 0))\n    return new Point(this._x / d, this._y / d)\n  }\n\n  public mul (scalar: number) {\n    return new Point(\n      this._x * scalar,\n      this._y * scalar\n    )\n  }\n\n  public add (point: Point) {\n    return new Point(\n      this._x + point._x,\n      this._y + point._y\n    )\n  }\n\n  public minus (point: Point) {\n    return new Point(\n      this._x - point._x,\n      this._y - point._y\n    )\n  }\n\n  public rotate (theta: number): Point {\n    const st = Math.sin(theta)\n    const ct = Math.cos(theta)\n    return new Point(ct * this._x - st * this._y, st * this._x + ct * this._y)\n  }\n\n  get x (): number {\n    return this._x\n  }\n\n  set x (value: number) {\n    this._x = value\n  }\n\n  get y (): number {\n    return this._y\n  }\n\n  set y (value: number) {\n    this._y = value\n  }\n}\n\nexport const pt = (x: number, y: number) => new Point(x, y)\n","import { Point } from './Point'\n\nexport class Ray {\n  public src: Point\n  public dir: Point\n\n  static Points(a: Point, b: Point) {\n    return new Ray(a, b.minus(a))\n  }\n\n  constructor (src: Point, dir: Point) {\n    this.src = src\n    this.dir = dir.minus(src)\n  }\n\n  public get theta() {\n    return Math.atan2(this.dir.y, this.dir.x)\n  }\n\n  public rotate(theta: number): Ray {\n    const after = this.dir.rotate(theta)\n    const ray = new Ray(this.src, after)\n    ray.dir = after\n    return ray\n  }\n\n  public at(t: number): Point {\n    return this.src.add(this.dir.mul(t))\n  }\n\n  public intersect(segment: Ray): number {\n    const r_px = this.src.x\n    const r_py = this.src.y\n    const r_dy = this.dir.y\n    const r_dx = this.dir.x\n    const s_px = segment.src.x\n    const s_py = segment.src.y\n    const s_dy = segment.dir.y\n    const s_dx = segment.dir.x\n    const T2 = (r_dx*(s_py-r_py) + r_dy*(r_px-s_px))/(s_dx*r_dy - s_dy*r_dx)\n    const T1 = (s_px+s_dx*T2-r_px)/r_dx\n    if (T1 > 0 && T2 >= 0 && T2 <= 1) {\n      return T1\n    } else {\n      return Infinity\n    }\n  }\n}\n","import * as PIXI from 'pixi.js'\nimport { Point, pt } from './Point'\nimport { Ray } from './Ray'\n\n// @ts-ignore\nwindow.PIXI = PIXI\n\nexport const shadowApp = () => {\n  let body = document.getElementById('container')!\n  while (body.firstChild) {\n    if (body.lastChild) {\n      body.removeChild(body.lastChild)\n    }\n  }\n  const app = new PIXI.Application({ antialias: true, backgroundColor: 0xffffffff })\n  const blackGraphics = new PIXI.Graphics()\n  blackGraphics.beginFill(0x0)\n  blackGraphics.drawRect(0,0,800, 600)\n  blackGraphics.endFill()\n  app.stage.addChild(blackGraphics)\n  body.appendChild(app.view)\n\n  app.stage.interactive = true\n\n  const container = new PIXI.Container()\n  container.width = 800\n  container.height = 600\n  app.stage.addChild(container)\n\n  const segments: Ray[] = []\n  const corners: Point[] = []\n\n  const makeSquare = (x: number, y: number, w: number, h: number) => {\n    const graphics = new PIXI.Graphics()\n    container.addChild(graphics)\n    graphics.lineStyle(1, 0x000000, 1)\n    graphics.moveTo(x, y)\n    graphics.lineTo(x + w, y)\n    graphics.lineTo(x + w, y + h)\n    graphics.lineTo(x, y + h)\n    graphics.lineTo(x, y)\n    graphics.closePath()\n    const p0 = pt(x, y)\n    const p1 = pt(x + w, y)\n    const p2 = pt(x + w, y + h)\n    const p3 = pt(x, y + h)\n    corners.push(p0, p1, p2, p3)\n    segments.push(new Ray(p0, p1), new Ray(p1, p2), new Ray(p2, p3), new Ray(p3, p0))\n    return graphics\n  }\n  const polygonGraphics = new PIXI.Graphics()\n  app.stage.addChild(polygonGraphics)\n  const cursorGraphics = new PIXI.Graphics()\n  container.addChild(cursorGraphics)\n  const ptGraphics = new PIXI.Graphics()\n  container.addChild(ptGraphics)\n\n  const bgFront = PIXI.Sprite.from('https://pixijs.io/examples/examples/assets/bg_scene_rotate.jpg');\n  container.addChild(bgFront);\n\n  const thing = new PIXI.Graphics();\n  app.stage.addChild(thing);\n  thing.x = app.screen.width / 2;\n  thing.y = app.screen.height / 2;\n  thing.lineStyle(0);\n  container.mask = polygonGraphics;\n\n  for (let i = 0; i < 10; i++) {\n    makeSquare(Math.random() * 800, Math.random() * 600, 20, 20)\n  }\n  makeSquare(0, 0, 800, 600)\n\n  const cast = (source: Point, corners: Point[], segments: Ray[]) => {\n    const rays: Ray[] = []\n    corners.forEach((target) => {\n      const ray = new Ray(source, target)\n      rays.push(ray.rotate(-0.00001), ray, ray.rotate(0.00001))\n    })\n    return rays\n      .sort((a, b) => a.theta - b.theta)\n      .map((ray, k) => {\n      const t = Math.min(...segments.map(l => ray.intersect(l)))\n      if (t < Infinity) {\n        let point: Point = ray.at(t)\n        cursorGraphics.beginFill(0xDE3249, 1)\n        cursorGraphics.drawCircle((point as Point).x, (point as Point).y, 2)\n        cursorGraphics.endFill()\n        cursorGraphics.lineStyle(1, 0xff0000 + 0x10 * k).moveTo(ray.src.x, ray.src.y).lineTo(point.x, point.y)\n        return point\n      }\n      return new Point(-1, -1)\n    }).filter(t => t.x !== -1)\n  }\n\n  const renderCast = (source: Point, intersections: Point[]) => {\n    intersections.forEach((point, k) => {\n      polygonGraphics.beginFill(0x8bc5ff, 0.4)\n      const another = k === intersections.length - 1 ? intersections[0] : intersections[k+1]\n      polygonGraphics.drawPolygon(source.x, source.y, point.x, point.y, another.x, another.y)\n      polygonGraphics.endFill()\n    })\n  }\n\n  const clear = () => {\n    polygonGraphics.clear()\n    cursorGraphics.clear()\n  }\n\n  app.ticker.add(() => {\n    const { x, y } = app.renderer.plugins.interaction.mouse.global\n    const sources = [new Point(x, y)]\n    clear()\n    sources.forEach((source) => {\n      const intersections = cast(source, corners, segments)\n      renderCast(source, intersections)\n    })\n  })\n\n  return app\n}\n","import React from 'react'\nimport { shadowApp } from './shadowApp'\nshadowApp()\nconst App = () => {\n  return (\n    <div/>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}