{"version":3,"sources":["Point.ts","Ray.ts","addSquare.ts","castToIntersections.ts","shadowApp.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Point","x","y","_x","_y","this","other","Math","pow","sqrt","n2Distance2","d","n2Distance","scalar","point","theta","st","sin","ct","cos","value","pt","Ray","src","dir","minus","atan2","after","rotate","ray","t","add","mul","segment","r_px","r_py","r_dy","r_dx","s_px","s_py","s_dy","s_dx","T2","T1","Infinity","a","b","addSquare","w","h","ctx","p0","p1","p2","p3","corners","push","segments","drawSquare","squares","container","graphics","PIXI","addChild","lineStyle","moveTo","lineTo","closePath","renderCast","source","polygonGraphics","intersections","rays","forEach","target","sort","map","k","min","l","intersect","at","filter","castToIntersections","beginFill","drawPolygon","flatMap","endFill","pipe","functions","reduce","acc","fn","clear","debugGraphics","body","document","getElementById","firstChild","lastChild","removeChild","app","antialias","backgroundColor","appendChild","view","stage","interactive","makeFullContainer","width","height","root","bgFront","from","blackGraphics","drawRect","ptGraphics","mask","Array","fill","random","ticker","renderer","plugins","interaction","mouse","global","sources","shadowApp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.560b454e.chunk.js","sourcesContent":["export class Point {\n  private _x: number\n  private _y: number\n\n  constructor (x: number, y: number) {\n    this._x = x\n    this._y = y\n  }\n\n  public n2Distance2 (other: Point): number {\n    return Math.pow(other.x - this.x, 2) + Math.pow(other.y - this.y, 2)\n  }\n\n  public n2Distance (other: Point): number {\n    return Math.sqrt(this.n2Distance2(other))\n  }\n\n  public normalize (): Point {\n    const d = this.n2Distance(new Point(0, 0))\n    return new Point(this._x / d, this._y / d)\n  }\n\n  public mul (scalar: number) {\n    return new Point(\n      this._x * scalar,\n      this._y * scalar\n    )\n  }\n\n  public add (point: Point) {\n    return new Point(\n      this._x + point._x,\n      this._y + point._y\n    )\n  }\n\n  public minus (point: Point) {\n    return new Point(\n      this._x - point._x,\n      this._y - point._y\n    )\n  }\n\n  public rotate (theta: number): Point {\n    const st = Math.sin(theta)\n    const ct = Math.cos(theta)\n    return new Point(ct * this._x - st * this._y, st * this._x + ct * this._y)\n  }\n\n  get x (): number {\n    return this._x\n  }\n\n  set x (value: number) {\n    this._x = value\n  }\n\n  get y (): number {\n    return this._y\n  }\n\n  set y (value: number) {\n    this._y = value\n  }\n}\n\nexport const pt = (x: number, y: number) => new Point(x, y)\n","import { Point } from './Point'\n\nexport class Ray {\n  public src: Point\n  public dir: Point\n\n  static Points(a: Point, b: Point) {\n    return new Ray(a, b.minus(a))\n  }\n\n  constructor (src: Point, dir: Point) {\n    this.src = src\n    this.dir = dir.minus(src)\n  }\n\n  public get theta() {\n    return Math.atan2(this.dir.y, this.dir.x)\n  }\n\n  public rotate(theta: number): Ray {\n    const after = this.dir.rotate(theta)\n    const ray = new Ray(this.src, after)\n    ray.dir = after\n    return ray\n  }\n\n  public at(t: number): Point {\n    return this.src.add(this.dir.mul(t))\n  }\n\n  public intersect(segment: Ray): number {\n    const r_px = this.src.x\n    const r_py = this.src.y\n    const r_dy = this.dir.y\n    const r_dx = this.dir.x\n    const s_px = segment.src.x\n    const s_py = segment.src.y\n    const s_dy = segment.dir.y\n    const s_dx = segment.dir.x\n    const T2 = (r_dx*(s_py-r_py) + r_dy*(r_px-s_px))/(s_dx*r_dy - s_dy*r_dx)\n    const T1 = (s_px+s_dx*T2-r_px)/r_dx\n    if (T1 > 0 && T2 >= 0 && T2 <= 1) {\n      return T1\n    } else {\n      return Infinity\n    }\n  }\n}\n","import * as PIXI from 'pixi.js';\nimport { pt } from './Point';\nimport { Ray } from './Ray';\nimport { ShadowAppCtx } from './ShadowAppCtx';\n\nexport const addSquare = (x: number, y: number, w: number, h: number) => (ctx: ShadowAppCtx): ShadowAppCtx => {\n  const p0 = pt(x, y);\n  const p1 = pt(x + w, y);\n  const p2 = pt(x + w, y + h);\n  const p3 = pt(x, y + h);\n  ctx.corners.push(p0, p1, p2, p3);\n  ctx.segments.push(new Ray(p0, p1), new Ray(p1, p2), new Ray(p2, p3), new Ray(p3, p0));\n  drawSquare(ctx.squares, x, y, w, h);\n  return ctx;\n};\nconst drawSquare = (container: PIXI.Container, x: number, y: number, w: number, h: number) => {\n  const graphics = new PIXI.Graphics();\n  container.addChild(graphics);\n  graphics.lineStyle(1, 0x000000, 1);\n  graphics.moveTo(x, y);\n  graphics.lineTo(x + w, y);\n  graphics.lineTo(x + w, y + h);\n  graphics.lineTo(x, y + h);\n  graphics.lineTo(x, y);\n  graphics.closePath();\n  return graphics;\n};\n","import { Point } from './Point';\nimport { Ray } from './Ray';\nimport { ShadowAppCtx } from './ShadowAppCtx';\nconst castToIntersections = (source: Point, corners: Point[], segments: Ray[]): Point[] => {\n  const rays: Ray[] = [];\n  corners.forEach((target) => {\n    const ray = new Ray(source, target);\n    rays.push(ray.rotate(-0.00001), ray, ray.rotate(0.00001));\n  });\n  return rays\n    .sort((a, b) => a.theta - b.theta)\n    .map((ray, k) => {\n      const t = Math.min(...segments.map(l => ray.intersect(l)));\n      if (t < Infinity) {\n        let point: Point = ray.at(t);\n        // cursorGraphics.beginFill(0xDE3249, 1)\n        // cursorGraphics.drawCircle((point as Point).x, (point as Point).y, 2)\n        // cursorGraphics.endFill()\n        // cursorGraphics.lineStyle(1, 0xff0000 + 0x10 * k).moveTo(ray.src.x, ray.src.y).lineTo(point.x, point.y)\n        return point;\n      }\n      return new Point(-1, -1);\n    }).filter(t => t.x !== -1);\n};\n\nexport const renderCast = (source: Point) => (ctx: ShadowAppCtx) => {\n  const { polygonGraphics } = ctx;\n  const intersections: Point[] = castToIntersections(source, ctx.corners, ctx.segments);\n  polygonGraphics.beginFill(0xffffff);\n  polygonGraphics.drawPolygon(...intersections.flatMap(pt => [pt.x, pt.y]));\n  polygonGraphics.endFill();\n  // intersections.forEach((point, k) => {\n  //   polygonGraphics.beginFill(0xffffff)\n  //   const another = k === intersections.length - 1 ? intersections[0] : intersections[k+1]\n  //   polygonGraphics.drawPolygon(source.x, source.y, point.x, point.y, another.x, another.y)\n  //   polygonGraphics.endFill()\n  // })\n  return ctx;\n};\n","import * as PIXI from 'pixi.js'\nimport { addSquare } from './addSquare'\nimport { Point } from './Point'\nimport { renderCast } from './castToIntersections'\nimport { ShadowAppCtx } from './ShadowAppCtx'\n\nconst pipe = <T> (...functions: Array<(ctx: T) => T>) => (ctx: T): T => {\n  return functions.reduce((acc: T, fn) => fn(acc), ctx)\n}\n\nconst clear = (ctx: ShadowAppCtx): ShadowAppCtx => {\n  ctx.polygonGraphics.clear()\n  ctx.debugGraphics.clear()\n  return ctx\n}\n\nexport const shadowApp = () => {\n  let body = document.getElementById('container')!\n  while (body.firstChild) {\n    if (body.lastChild) {\n      body.removeChild(body.lastChild)\n    }\n  }\n  const app = new PIXI.Application({ antialias: true, backgroundColor: 0xffffffff })\n  body.appendChild(app.view)\n\n  app.stage.interactive = true\n\n  const makeFullContainer = () => {\n    const container = new PIXI.Container()\n    container.width = 800\n    container.height = 600\n    return container\n  }\n\n  const root = makeFullContainer()\n  \n  const bgFront = PIXI.Sprite.from('https://pixijs.io/examples/examples/assets/bg_scene_rotate.jpg');\n  const blackGraphics = new PIXI.Graphics()\n  blackGraphics.beginFill(0x0)\n  blackGraphics.drawRect(0,0,800, 600)\n  blackGraphics.endFill()\n  root.addChild(blackGraphics)\n  const polygonGraphics = new PIXI.Graphics()\n  polygonGraphics.addChild(bgFront)\n  root.addChild(polygonGraphics)\n  const debugGraphics = new PIXI.Graphics()\n  root.addChild(debugGraphics)\n  const ptGraphics = new PIXI.Graphics()\n  root.addChild(ptGraphics)\n  app.stage.addChild(root)\n  root.addChild(bgFront);\n  const squares = makeFullContainer()\n  root.addChild(squares)\n  bgFront.mask = polygonGraphics\n\n  let ctx: ShadowAppCtx = pipe(...new Array(10).fill('').map(() => (addSquare(Math.random() * 800, Math.random() * 600, 20, 20))), addSquare(0, 0, 800, 600))({\n    segments: [],\n    corners: [],\n    root,\n    squares,\n    polygonGraphics,\n    debugGraphics: debugGraphics,\n    ptGraphics\n  })\n\n  app.ticker.add(() => {\n    const { x, y } = app.renderer.plugins.interaction.mouse.global\n    const sources = [new Point(x, y)]\n    ctx = pipe(\n      clear,\n      ...sources.map(source => renderCast(source))\n    )(ctx)\n  })\n\n  return app\n}\n","import React from 'react'\nimport { shadowApp } from './shadowApp'\nshadowApp()\nconst App = () => {\n  return (\n    <div/>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}